# Generated from OclExpression.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,59,427,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,
        5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,12,
        1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
        1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
        1,19,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,
        1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,
        1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
        1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,
        1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,
        1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,
        1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,
        1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,
        1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,
        1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,
        1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,
        1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,
        1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
        1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,
        1,52,1,53,1,53,5,53,387,8,53,10,53,12,53,390,9,53,1,53,1,53,1,54,
        1,54,1,54,1,55,1,55,5,55,399,8,55,10,55,12,55,402,9,55,1,56,4,56,
        405,8,56,11,56,12,56,406,1,57,1,57,1,57,3,57,412,8,57,1,57,1,57,
        3,57,416,8,57,1,57,3,57,419,8,57,1,58,4,58,422,8,58,11,58,12,58,
        423,1,58,1,58,0,0,59,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
        21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
        32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,
        43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,
        107,54,109,55,111,56,113,57,115,58,117,59,1,0,7,1,0,39,39,3,0,65,
        90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,69,69,
        101,101,2,0,43,43,45,45,3,0,9,10,13,13,32,32,433,0,1,1,0,0,0,0,3,
        1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
        0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
        0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,
        0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,
        0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,
        0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,
        0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,
        0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,
        0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,
        0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,
        1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,
        0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,1,119,1,0,0,0,3,122,1,
        0,0,0,5,124,1,0,0,0,7,127,1,0,0,0,9,129,1,0,0,0,11,133,1,0,0,0,13,
        135,1,0,0,0,15,137,1,0,0,0,17,139,1,0,0,0,19,141,1,0,0,0,21,143,
        1,0,0,0,23,146,1,0,0,0,25,148,1,0,0,0,27,151,1,0,0,0,29,155,1,0,
        0,0,31,158,1,0,0,0,33,162,1,0,0,0,35,170,1,0,0,0,37,172,1,0,0,0,
        39,174,1,0,0,0,41,176,1,0,0,0,43,178,1,0,0,0,45,183,1,0,0,0,47,189,
        1,0,0,0,49,191,1,0,0,0,51,193,1,0,0,0,53,195,1,0,0,0,55,202,1,0,
        0,0,57,210,1,0,0,0,59,227,1,0,0,0,61,235,1,0,0,0,63,246,1,0,0,0,
        65,250,1,0,0,0,67,261,1,0,0,0,69,270,1,0,0,0,71,274,1,0,0,0,73,277,
        1,0,0,0,75,281,1,0,0,0,77,284,1,0,0,0,79,287,1,0,0,0,81,292,1,0,
        0,0,83,297,1,0,0,0,85,303,1,0,0,0,87,308,1,0,0,0,89,314,1,0,0,0,
        91,322,1,0,0,0,93,327,1,0,0,0,95,334,1,0,0,0,97,341,1,0,0,0,99,352,
        1,0,0,0,101,363,1,0,0,0,103,371,1,0,0,0,105,379,1,0,0,0,107,384,
        1,0,0,0,109,393,1,0,0,0,111,396,1,0,0,0,113,404,1,0,0,0,115,408,
        1,0,0,0,117,421,1,0,0,0,119,120,5,58,0,0,120,121,5,58,0,0,121,2,
        1,0,0,0,122,123,5,46,0,0,123,4,1,0,0,0,124,125,5,45,0,0,125,126,
        5,62,0,0,126,6,1,0,0,0,127,128,5,45,0,0,128,8,1,0,0,0,129,130,5,
        110,0,0,130,131,5,111,0,0,131,132,5,116,0,0,132,10,1,0,0,0,133,134,
        5,42,0,0,134,12,1,0,0,0,135,136,5,47,0,0,136,14,1,0,0,0,137,138,
        5,43,0,0,138,16,1,0,0,0,139,140,5,61,0,0,140,18,1,0,0,0,141,142,
        5,60,0,0,142,20,1,0,0,0,143,144,5,60,0,0,144,145,5,61,0,0,145,22,
        1,0,0,0,146,147,5,62,0,0,147,24,1,0,0,0,148,149,5,62,0,0,149,150,
        5,61,0,0,150,26,1,0,0,0,151,152,5,97,0,0,152,153,5,110,0,0,153,154,
        5,100,0,0,154,28,1,0,0,0,155,156,5,111,0,0,156,157,5,114,0,0,157,
        30,1,0,0,0,158,159,5,120,0,0,159,160,5,111,0,0,160,161,5,114,0,0,
        161,32,1,0,0,0,162,163,5,105,0,0,163,164,5,109,0,0,164,165,5,112,
        0,0,165,166,5,108,0,0,166,167,5,105,0,0,167,168,5,101,0,0,168,169,
        5,115,0,0,169,34,1,0,0,0,170,171,5,40,0,0,171,36,1,0,0,0,172,173,
        5,44,0,0,173,38,1,0,0,0,174,175,5,41,0,0,175,40,1,0,0,0,176,177,
        5,124,0,0,177,42,1,0,0,0,178,179,5,115,0,0,179,180,5,101,0,0,180,
        181,5,108,0,0,181,182,5,102,0,0,182,44,1,0,0,0,183,184,5,84,0,0,
        184,185,5,117,0,0,185,186,5,112,0,0,186,187,5,108,0,0,187,188,5,
        101,0,0,188,46,1,0,0,0,189,190,5,123,0,0,190,48,1,0,0,0,191,192,
        5,125,0,0,192,50,1,0,0,0,193,194,5,58,0,0,194,52,1,0,0,0,195,196,
        5,83,0,0,196,197,5,116,0,0,197,198,5,114,0,0,198,199,5,105,0,0,199,
        200,5,110,0,0,200,201,5,103,0,0,201,54,1,0,0,0,202,203,5,73,0,0,
        203,204,5,110,0,0,204,205,5,116,0,0,205,206,5,101,0,0,206,207,5,
        103,0,0,207,208,5,101,0,0,208,209,5,114,0,0,209,56,1,0,0,0,210,211,
        5,85,0,0,211,212,5,110,0,0,212,213,5,108,0,0,213,214,5,105,0,0,214,
        215,5,109,0,0,215,216,5,105,0,0,216,217,5,116,0,0,217,218,5,101,
        0,0,218,219,5,100,0,0,219,220,5,78,0,0,220,221,5,97,0,0,221,222,
        5,116,0,0,222,223,5,117,0,0,223,224,5,114,0,0,224,225,5,97,0,0,225,
        226,5,108,0,0,226,58,1,0,0,0,227,228,5,66,0,0,228,229,5,111,0,0,
        229,230,5,111,0,0,230,231,5,108,0,0,231,232,5,101,0,0,232,233,5,
        97,0,0,233,234,5,110,0,0,234,60,1,0,0,0,235,236,5,67,0,0,236,237,
        5,111,0,0,237,238,5,108,0,0,238,239,5,108,0,0,239,240,5,101,0,0,
        240,241,5,99,0,0,241,242,5,116,0,0,242,243,5,105,0,0,243,244,5,111,
        0,0,244,245,5,110,0,0,245,62,1,0,0,0,246,247,5,66,0,0,247,248,5,
        97,0,0,248,249,5,103,0,0,249,64,1,0,0,0,250,251,5,79,0,0,251,252,
        5,114,0,0,252,253,5,100,0,0,253,254,5,101,0,0,254,255,5,114,0,0,
        255,256,5,101,0,0,256,257,5,100,0,0,257,258,5,83,0,0,258,259,5,101,
        0,0,259,260,5,116,0,0,260,66,1,0,0,0,261,262,5,83,0,0,262,263,5,
        101,0,0,263,264,5,113,0,0,264,265,5,117,0,0,265,266,5,101,0,0,266,
        267,5,110,0,0,267,268,5,99,0,0,268,269,5,101,0,0,269,68,1,0,0,0,
        270,271,5,83,0,0,271,272,5,101,0,0,272,273,5,116,0,0,273,70,1,0,
        0,0,274,275,5,46,0,0,275,276,5,46,0,0,276,72,1,0,0,0,277,278,5,108,
        0,0,278,279,5,101,0,0,279,280,5,116,0,0,280,74,1,0,0,0,281,282,5,
        105,0,0,282,283,5,110,0,0,283,76,1,0,0,0,284,285,5,105,0,0,285,286,
        5,102,0,0,286,78,1,0,0,0,287,288,5,116,0,0,288,289,5,104,0,0,289,
        290,5,101,0,0,290,291,5,110,0,0,291,80,1,0,0,0,292,293,5,101,0,0,
        293,294,5,108,0,0,294,295,5,115,0,0,295,296,5,101,0,0,296,82,1,0,
        0,0,297,298,5,101,0,0,298,299,5,110,0,0,299,300,5,100,0,0,300,301,
        5,105,0,0,301,302,5,102,0,0,302,84,1,0,0,0,303,304,5,116,0,0,304,
        305,5,114,0,0,305,306,5,117,0,0,306,307,5,101,0,0,307,86,1,0,0,0,
        308,309,5,102,0,0,309,310,5,97,0,0,310,311,5,108,0,0,311,312,5,115,
        0,0,312,313,5,101,0,0,313,88,1,0,0,0,314,315,5,105,0,0,315,316,5,
        110,0,0,316,317,5,118,0,0,317,318,5,97,0,0,318,319,5,108,0,0,319,
        320,5,105,0,0,320,321,5,100,0,0,321,90,1,0,0,0,322,323,5,110,0,0,
        323,324,5,117,0,0,324,325,5,108,0,0,325,326,5,108,0,0,326,92,1,0,
        0,0,327,328,5,76,0,0,328,329,5,97,0,0,329,330,5,109,0,0,330,331,
        5,98,0,0,331,332,5,100,0,0,332,333,5,97,0,0,333,94,1,0,0,0,334,335,
        5,79,0,0,335,336,5,99,0,0,336,337,5,108,0,0,337,338,5,65,0,0,338,
        339,5,110,0,0,339,340,5,121,0,0,340,96,1,0,0,0,341,342,5,79,0,0,
        342,343,5,99,0,0,343,344,5,108,0,0,344,345,5,73,0,0,345,346,5,110,
        0,0,346,347,5,118,0,0,347,348,5,97,0,0,348,349,5,108,0,0,349,350,
        5,105,0,0,350,351,5,100,0,0,351,98,1,0,0,0,352,353,5,79,0,0,353,
        354,5,99,0,0,354,355,5,108,0,0,355,356,5,77,0,0,356,357,5,101,0,
        0,357,358,5,115,0,0,358,359,5,115,0,0,359,360,5,97,0,0,360,361,5,
        103,0,0,361,362,5,101,0,0,362,100,1,0,0,0,363,364,5,79,0,0,364,365,
        5,99,0,0,365,366,5,108,0,0,366,367,5,83,0,0,367,368,5,101,0,0,368,
        369,5,108,0,0,369,370,5,102,0,0,370,102,1,0,0,0,371,372,5,79,0,0,
        372,373,5,99,0,0,373,374,5,108,0,0,374,375,5,86,0,0,375,376,5,111,
        0,0,376,377,5,105,0,0,377,378,5,100,0,0,378,104,1,0,0,0,379,380,
        5,82,0,0,380,381,5,101,0,0,381,382,5,97,0,0,382,383,5,108,0,0,383,
        106,1,0,0,0,384,388,5,39,0,0,385,387,8,0,0,0,386,385,1,0,0,0,387,
        390,1,0,0,0,388,386,1,0,0,0,388,389,1,0,0,0,389,391,1,0,0,0,390,
        388,1,0,0,0,391,392,5,39,0,0,392,108,1,0,0,0,393,394,5,95,0,0,394,
        395,3,107,53,0,395,110,1,0,0,0,396,400,7,1,0,0,397,399,7,2,0,0,398,
        397,1,0,0,0,399,402,1,0,0,0,400,398,1,0,0,0,400,401,1,0,0,0,401,
        112,1,0,0,0,402,400,1,0,0,0,403,405,7,3,0,0,404,403,1,0,0,0,405,
        406,1,0,0,0,406,404,1,0,0,0,406,407,1,0,0,0,407,114,1,0,0,0,408,
        411,3,113,56,0,409,410,5,46,0,0,410,412,3,113,56,0,411,409,1,0,0,
        0,411,412,1,0,0,0,412,418,1,0,0,0,413,415,7,4,0,0,414,416,7,5,0,
        0,415,414,1,0,0,0,415,416,1,0,0,0,416,417,1,0,0,0,417,419,3,113,
        56,0,418,413,1,0,0,0,418,419,1,0,0,0,419,116,1,0,0,0,420,422,7,6,
        0,0,421,420,1,0,0,0,422,423,1,0,0,0,423,421,1,0,0,0,423,424,1,0,
        0,0,424,425,1,0,0,0,425,426,6,58,0,0,426,118,1,0,0,0,8,0,388,400,
        406,411,415,418,423,1,6,0,0
    ]

class OclExpressionLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    STRING = 54
    SPECIAL_VARNAME = 55
    VARNAME = 56
    INT = 57
    FLOAT = 58
    WS = 59

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'::'", "'.'", "'->'", "'-'", "'not'", "'*'", "'/'", "'+'", 
            "'='", "'<'", "'<='", "'>'", "'>='", "'and'", "'or'", "'xor'", 
            "'implies'", "'('", "','", "')'", "'|'", "'self'", "'Tuple'", 
            "'{'", "'}'", "':'", "'String'", "'Integer'", "'UnlimitedNatural'", 
            "'Boolean'", "'Collection'", "'Bag'", "'OrderedSet'", "'Sequence'", 
            "'Set'", "'..'", "'let'", "'in'", "'if'", "'then'", "'else'", 
            "'endif'", "'true'", "'false'", "'invalid'", "'null'", "'Lambda'", 
            "'OclAny'", "'OclInvalid'", "'OclMessage'", "'OclSelf'", "'OclVoid'", 
            "'Real'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "SPECIAL_VARNAME", "VARNAME", "INT", "FLOAT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "STRING", "SPECIAL_VARNAME", 
                  "VARNAME", "INT", "FLOAT", "WS" ]

    grammarFileName = "OclExpression.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


